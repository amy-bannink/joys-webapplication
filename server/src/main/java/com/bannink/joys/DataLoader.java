package com.bannink.joys;

import com.bannink.joys.domain.*;
import com.bannink.joys.repository.IChallengeRepository;
import com.bannink.joys.repository.IGameRepository;
import com.bannink.joys.repository.IUserRepository;
import com.bannink.joys.repository.RoleRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;


@Component
public class DataLoader implements ApplicationRunner {
    private IGameRepository gameInformationRepository;
    private IChallengeRepository challengeInformationRepository;
    private PasswordEncoder encoder;
    private RoleRepository roleRepository;
    private IUserRepository userRepository;

    @Autowired
    public DataLoader(IGameRepository gameInformationRepository, IChallengeRepository challengeInformationRepository, PasswordEncoder encoder, RoleRepository roleRepository, IUserRepository userRepository) {
        this.gameInformationRepository = gameInformationRepository;
        this.challengeInformationRepository = challengeInformationRepository;
        this.encoder = encoder;
        this.roleRepository = roleRepository;
        this.userRepository = userRepository;
    }
    public void run(ApplicationArguments args) {
        Game game = new Game();
        game.setName("5 Min Challenge");
        game.setDescription("descr");
        gameInformationRepository.save(game);
        Game game2 = new Game();
        game2.setName("15 Min Challenge");
        game2.setDescription("descr");
        gameInformationRepository.save(game2);
        Game game3 = new Game();
        game3.setName("Day Challenge");
        game3.setDescription("descr");
        gameInformationRepository.save(game3);

        Challenge challenge1 = new Challenge();
        challenge1.setName("Challenge1");
        challenge1.setLevel("5 minute challenge");
        challenge1.setDescription("descr");
        challenge1.setValue(10);
        challenge1.setGameId(game.getId());
        challengeInformationRepository.save(challenge1);
        Challenge challenge2 = new Challenge();
        challenge2.setName("Challenge2");
        challenge2.setLevel("15 minute challenge");
        challenge2.setDescription("descr");
        challenge2.setValue(20);
        challenge2.setGameId(game2.getId());
        challengeInformationRepository.save(challenge2);
        Challenge challenge3 = new Challenge();
        challenge3.setName("Challenge3");
        challenge3.setLevel("24 hour challenge");
        challenge3.setDescription("descr");
        challenge3.setValue(100);
        challenge3.setGameId(game3.getId());
        challengeInformationRepository.save(challenge3);
        Challenge challenge4 = new Challenge();
        challenge4.setName("Challenge4");
        challenge4.setLevel("15 minute challenge");
        challenge4.setDescription("descr");
        challenge4.setValue(20);
        challenge4.setGameId(game2.getId());
        challengeInformationRepository.save(challenge4);
        Challenge challenge5 = new Challenge();
        challenge5.setName("Challenge5");
        challenge5.setLevel("15 minute challenge");
        challenge5.setDescription("descr");
        challenge5.setValue(20);
        challenge5.setGameId(game2.getId());
        challengeInformationRepository.save(challenge5);
        Challenge challenge6 = new Challenge();
        challenge6.setName("Challenge6");
        challenge6.setLevel("5 minute challenge");
        challenge6.setDescription("descr");
        challenge6.setValue(10);
        challenge6.setGameId(game.getId());
        challengeInformationRepository.save(challenge6);

        Challenge challenge7 = new Challenge();
        challenge7.setName("Challenge7");
        challenge7.setLevel("24 hour challenge");
        challenge7.setDescription("descr");
        challenge7.setValue(100);
        challenge7.setGameId(game3.getId());
        challengeInformationRepository.save(challenge7);
        Challenge challenge8 = new Challenge();
        challenge8.setName("Challenge8");
        challenge8.setLevel("5 minute challenge");
        challenge8.setDescription("descr");
        challenge8.setValue(10);
        challenge8.setGameId(game.getId());
        challengeInformationRepository.save(challenge8);
        Challenge challenge9 = new Challenge();
        challenge9.setName("Challenge9");
        challenge9.setLevel("5 minute challenge");
        challenge9.setDescription("descr");
        challenge9.setValue(10);
        challenge9.setGameId(game.getId());
        challengeInformationRepository.save(challenge9);
        Challenge challenge10 = new Challenge();
        challenge10.setName("Challenge10");
        challenge10.setLevel("24 hour challenge");
        challenge10.setDescription("descr");
        challenge10.setValue(100);
        challenge10.setGameId(game3.getId());
        challengeInformationRepository.save(challenge10);
        Challenge challenge11 = new Challenge();
        challenge11.setName("Challenge11");
        challenge11.setLevel("15 minute challenge");
        challenge11.setDescription("descr");
        challenge11.setValue(20);
        challenge11.setGameId(game2.getId());
        challengeInformationRepository.save(challenge11);
        Challenge challenge12 = new Challenge();
        challenge12.setName("Challenge12");
        challenge12.setLevel("24 hour challenge");
        challenge12.setDescription("descr");
        challenge12.setValue(100);
        challenge12.setGameId(game3.getId());
        challengeInformationRepository.save(challenge12);

        Challenge challenge13 = new Challenge();
        challenge13.setName("Challenge13");
        challenge13.setLevel("5 minute challenge");
        challenge13.setDescription("descr");
        challenge13.setValue(10);
        challenge13.setGameId(game.getId());
        challengeInformationRepository.save(challenge13);
        Challenge challenge14 = new Challenge();
        challenge14.setName("Challenge14");
        challenge14.setLevel("15 minute challenge");
        challenge14.setDescription("descr");
        challenge14.setValue(20);
        challenge14.setGameId(game2.getId());
        challengeInformationRepository.save(challenge14);
        Challenge challenge15 = new Challenge();
        challenge15.setName("Challenge15");
        challenge15.setLevel("24 hour challenge");
        challenge15.setDescription("descr");
        challenge15.setValue(100);
        challenge15.setGameId(game3.getId());
        challengeInformationRepository.save(challenge15);
        Challenge challenge16 = new Challenge();
        challenge16.setName("Challenge16");
        challenge16.setLevel("5 minute challenge");
        challenge16.setDescription("descr");
        challenge16.setValue(10);
        challenge16.setGameId(game.getId());
        challengeInformationRepository.save(challenge16);
        Challenge challenge17 = new Challenge();
        challenge17.setName("Challenge17");
        challenge17.setLevel("15 minute challenge");
        challenge17.setDescription("descr");
        challenge17.setValue(20);
        challenge17.setGameId(game2.getId());
        challengeInformationRepository.save(challenge17);
        Challenge challenge18 = new Challenge();
        challenge18.setName("Challenge18");
        challenge18.setLevel("24 hour challenge");
        challenge18.setDescription("descr");
        challenge18.setValue(100);
        challenge18.setGameId(game3.getId());
        challengeInformationRepository.save(challenge18);


        User user = new User("naamnaam" ,"email@gmail.com", encoder.encode("Wachtwoord19!"));
        Set<Role> roles = new HashSet<>();
        Role userRole = roleRepository.findByName(ERole.ROLE_USER)
                .orElseThrow(() -> new RuntimeException("ROLE NOT FOUND"));
        roles.add(userRole);
        user.setRoles(roles);
        List<Challenge> privateToDo = new ArrayList<>();
        privateToDo.add(challenge1);
        privateToDo.add(challenge2);
        privateToDo.add(challenge3);
        user.setPrivateToDo(privateToDo);
        List<Challenge> publicToDo = new ArrayList<>();
        publicToDo.add(challenge4);
        publicToDo.add(challenge5);
        publicToDo.add(challenge6);
        user.setPublicToDo(publicToDo);
        List<Challenge> completedToDo = new ArrayList<>();
        completedToDo.add(challenge7);
        completedToDo.add(challenge8);
        completedToDo.add(challenge9);
        user.setCompletedToDo(completedToDo);
        userRepository.save(user);
    }
}